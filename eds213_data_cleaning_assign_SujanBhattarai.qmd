
####URL to the Repository
```{r}
#insert link 
url = https://github.com/Sujan-Bhattarai12/bren-meds213-data-cleaning.git

```

```{r}
#----create a master function that cleans all columns similar way
# load libraries
library(tidyverse)
library(here)
```


```{r, warning=FALSE, message=FALSE}
# File paths as was originally set in the class
datadir_raw <- "data/raw/"
datadir_processed <- "data/processed/"
species_file <- "ASDN_Daily_species.csv"
snowsurvey_file <- "ASDN_Snow_survey.csv"
watercover_file <- "ASDN_Water_cover.csv"

# Function for data cleaning
clean_data <- function(input_file, output_file) {
  # Import data from the datadir_raw
  data <- read_csv(file.path(datadir_raw, "ASDN_Snow_survey.csv"))
  # Replace problematic values
  data_fixed <- data %>%
    #change snow cover, water cover, and land cover to numeric: these 
    #chracters could be similar in all three columns, so replace that 
    #with chracter NA. These values do no carry any meaning in analysis
    # and creates problem during anaylsis. this should be changed to NA 
    # so that it can be treated as missing values
    mutate(Snow_cover = case_when(
                        Snow_cover %in% c(".", "-", "n/a", "unk") ~ NA_character_,  
                        TRUE  ~ Snow_cover),
           Water_cover =case_when(
                        Water_cover %in% c(".", "-", "n/a", "unk") ~ NA_character_,
                        TRUE ~ Water_cover),
           Land_cover = case_when(Land_cover %in% c(".", "-", "n/a", "unk") ~ NA_character_,
                        TRUE ~ Land_cover)) %>%
    #change all these columns to Numeric, for any quantitative analysis
    mutate_at(vars(Snow_cover,Land_cover, Water_cover), as.numeric) %>%
    #for values greater than 100 and less than 0, replace with NA. 
    #These values are not possible in the context of the data and 
    #what we know about percentage. Alternatively these values can
    #replaced with NA, but it is better to replace 100 if it is than
    #100, and 0 if it is less than 0, then 0 to reduce data loss.
    mutate(
      Snow_cover =  case_when(Snow_cover > 100 ~NA,
                              Snow_cover < 0~ NA, 
                              TRUE ~Snow_cover),
      Water_cover = case_when(Water_cover > 100 ~NA,
                              Water_cover < 0~ NA, 
                              TRUE ~Water_cover),
      Land_cover = case_when( Land_cover > 100 ~ NA_real_,
                              Land_cover < 0 ~ NA_real_,
                              TRUE ~ Land_cover),
 )
}

# Apply the function to the snow survey data that produces this clened dataset
columns_cleaned <- clean_data(snowsurvey_file)

# For total cover columns, calculate the total cover and fill in the missing values
# based on three columns (Snow_cover, Water_cover, Land_cover) and replace it with 
# appropriate values. For this part, I will use case_when function to replace the
# missing values in the Total_cover column with either sum or individual values available 
# from the three columns.

columns_cleaned <- columns_cleaned %>%
  mutate(Total_cover = Snow_cover + Water_cover + Land_cover) %>%
  mutate(
    Snow_cover = case_when(is.na(Snow_cover) & !is.na(Total_cover) & !is.na(Water_cover) & !is.na(Land_cover) ~ Total_cover - Water_cover - Land_cover,
                           TRUE ~ Snow_cover),
    Water_cover = case_when(is.na(Water_cover) & !is.na(Total_cover) & !is.na(Snow_cover) & !is.na(Land_cover) ~ Total_cover - Snow_cover - Land_cover,
                            TRUE ~ Water_cover),
    Land_cover = case_when(is.na(Land_cover) & !is.na(Total_cover) & !is.na(Snow_cover) & !is.na(Water_cover) ~ Total_cover - Snow_cover - Water_cover,
                           TRUE ~ Land_cover)
  )

#for all columns with total cover greater than 100 in total_cover column, set it to 100
#the total cover column was not cleaned earlier, so all values greater than 100 should be
#set to 100. This is done using pmin function in R. This caps the value to 100 if any value
#is greater than 100.
columns_cleaned <- columns_cleaned %>%
  mutate(Total_cover = pmin(Total_cover, 100))

```


```{r}
# write the final csv to as per assignment requirement
write_csv(columns_cleaned, here(datadir_processed, "all_cover_fixed_SUJAN.csv"))

```



